[{"/Users/test/Desktop/sarya/aligent/alisar/src/index.js":"1","/Users/test/Desktop/sarya/aligent/alisar/src/App.js":"2","/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurants.js":"3","/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurant.js":"4","/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurantDash.js":"5"},{"size":166,"mtime":1608465158856,"results":"6","hashOfConfig":"7"},{"size":5843,"mtime":1608465155582,"results":"8","hashOfConfig":"7"},{"size":350,"mtime":1608465148664,"results":"9","hashOfConfig":"7"},{"size":259,"mtime":1608465142362,"results":"10","hashOfConfig":"7"},{"size":838,"mtime":1608465145391,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"qam57w",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/test/Desktop/sarya/aligent/alisar/src/index.js",[],["24","25"],"/Users/test/Desktop/sarya/aligent/alisar/src/App.js",["26","27"],"import React, { Component } from 'react'; \nimport RestaurantsList from './components/restaurants'\nimport RestaurantDash from './components/restaurantDash'\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      restaurants: [],\n      restaurantInfo: null,\n      filterAttributes : {}\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleRestaurantClick(restaurant) {\n    this.setState({\n      restaurantInfo: restaurant\n    });\n  }\n\n  handleInputChange(event) {\n    if(event.target.checked){\n      this.state.filterAttributes[event.target.id] = event.target.value; \n    }else{\n      delete this.state.filterAttributes[event.target.id];\n    }    \n  }\n\n  filterRestaurants(e) {\n    e.preventDefault();\n    console.log(this.state.filterAttributes)\n    const attributes = this.state.filterAttributes;\n    var queryCuisine = \"\";\n    var queryCategory = \"\";\n    for (const key in attributes){\n      if (attributes[key] == 'cuisine') {\n        queryCuisine = key + '%2C' + queryCuisine;\n      } else {\n        queryCategory = key + '%2C' + queryCategory;\n      }\n    }\n    queryCuisine = queryCuisine.substring(0, queryCuisine.length-3);\n    queryCategory = queryCategory.substring(0, queryCategory.length-3)\n    const apiUrl2 = `https://developers.zomato.com/api/v2.1/search?city_id=297&cuisines=${queryCuisine}&category=${queryCategory}`;\n    const headers = { \n      'Content-Type': 'application/json',\n      'user-key': '621df21dc5fe4ac84e874b3ddaf3536e'\n    } \n    fetch(apiUrl2, {method:'GET',headers})\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            restaurants: result.restaurants\n          });\n          console.log(result)\n        },\n        (error) => {\n          console.log(error)\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentDidMount() {\n    const entity_id = '297';\n    const city_id = '297';\n    const apiUrl = `https://developers.zomato.com/api/v2.1/search?entity_id=${entity_id}&entity_type=city&q=${city_id}&count=200`;\n    const headers = { \n      'Content-Type': 'application/json',\n      'user-key': '621df21dc5fe4ac84e874b3ddaf3536e'\n    } \n    fetch(apiUrl, {method:'GET',headers})\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            restaurants: result.restaurants\n          });\n          console.log(result)\n        },\n        (error) => {\n          console.log(error)\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, restaurants, restaurantInfo} = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div className = 'container'>\n          Restaurants In Adelaide Australia\n          <div className = 'filterDiv'>\n            <form className = 'cuisines'>\n              <div>\n              <label className = 'cuiLabel'>CATEGORY</label><br/>\n                <input type=\"checkbox\" id=\"1\" name=\"cuisines\" value=\"category\" onChange={this.handleInputChange} />\n                <label className='cui'>Delivery</label><br/>\n                <input type=\"checkbox\" id=\"2\" name=\"cuisines\" value=\"category\" onChange={this.handleInputChange} />\n                <label className='cui'>Dine-out</label><br/>\n                <input type=\"checkbox\" id=\"3\" name=\"cuisines\" value=\"category\" onChange={this.handleInputChange} />\n                <label className='cui'>Nightlife</label><br/>\n                <input type=\"checkbox\" id=\"4\" name=\"cuisines\" value=\"category\" onChange={this.handleInputChange} />\n                <label className='cui'>Catching-up</label><br/>\n              </div>\n              <div>\n                <label className = 'cuiLabel'>CUISINE</label><br/>\n                <input type=\"checkbox\" id=\"25\" name=\"cuisines\" value=\"cuisine\" onChange={this.handleInputChange} />\n                <label className='cui'>Chinese</label><br/>\n                <input type=\"checkbox\" id=\"161\" name=\"cuisines\" value=\"cuisine\" onChange={this.handleInputChange} />\n                <label className='cui'>Coffee and Tea</label><br/>\n                <input type=\"checkbox\" id=\"401\" name=\"cuisines\" value=\"cuisine\" onChange={this.handleInputChange} />\n                <label className='cui'>Asian Fusion</label><br/>\n                <input type=\"checkbox\" id=\"131\" name=\"cuisines\" value=\"cuisine\" onChange={this.handleInputChange} />\n                <label className='cui'>Australian</label><br/>\n              </div>\n              <div>\n                <br/>\n                <input type=\"checkbox\" id=\"1039\" name=\"cuisines\" value=\"cuisine\" onChange={this.handleInputChange} />\n                <label className='cui'>Cafe Food</label><br/>\n                <input type=\"checkbox\" id=\"40\" name=\"cuisines\" value=\"cuisine\" onChange={this.handleInputChange} />\n                <label className='cui'>Fast Food</label><br/>\n                <input type=\"checkbox\" id='5' name=\"cuisines\" value=\"cuisine\" onChange={this.handleInputChange}/>\n                <label className='cui'>Bakery</label><br/><br/>\n              </div>\n              <button onClick={(e) => this.filterRestaurants(e)}>filter</button>\n            </form>\n          </div>\n          <div className = 'restaurantList'><RestaurantsList restaurants = {restaurants}  handleRestaurantClick = {this.handleRestaurantClick.bind(this)} /></div>\n          <div className = 'restaurantDash'><RestaurantDash restaurant = {restaurantInfo} /></div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurants.js",[],"/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurant.js",[],"/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurantDash.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":27,"column":7,"nodeType":"34","endLine":27,"endColumn":34},{"ruleId":"35","severity":1,"message":"36","line":40,"column":27,"nodeType":"37","messageId":"38","endLine":40,"endColumn":29},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]