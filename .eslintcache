[{"/Users/test/Desktop/sarya/aligent/alisar/src/index.js":"1","/Users/test/Desktop/sarya/aligent/alisar/src/App.js":"2","/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurants.js":"3","/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurant.js":"4","/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurantDash.js":"5","/Users/test/Desktop/sarya/aligent/alisar/src/components/cities.js":"6","/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurantInfo.js":"7","/Users/test/Desktop/sarya/aligent/alisar/src/components/overview.js":"8","/Users/test/Desktop/sarya/aligent/alisar/src/components/reviews.js":"9"},{"size":824,"mtime":1609256527962,"results":"10","hashOfConfig":"11"},{"size":13213,"mtime":1609680119123,"results":"12","hashOfConfig":"11"},{"size":350,"mtime":1608465148664,"results":"13","hashOfConfig":"11"},{"size":259,"mtime":1608465142362,"results":"14","hashOfConfig":"11"},{"size":2017,"mtime":1609683256806,"results":"15","hashOfConfig":"11"},{"size":2520,"mtime":1609375300209,"results":"16","hashOfConfig":"11"},{"size":1858,"mtime":1609679051346,"results":"17","hashOfConfig":"11"},{"size":1185,"mtime":1609375262578,"results":"18","hashOfConfig":"11"},{"size":3242,"mtime":1609375007665,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qam57w",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},"/Users/test/Desktop/sarya/aligent/alisar/src/index.js",[],["40","41"],"/Users/test/Desktop/sarya/aligent/alisar/src/App.js",["42","43","44"],"/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurants.js",[],"/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurant.js",[],"/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurantDash.js",["45","46"],"/Users/test/Desktop/sarya/aligent/alisar/src/components/cities.js",[],"/Users/test/Desktop/sarya/aligent/alisar/src/components/restaurantInfo.js",[],"/Users/test/Desktop/sarya/aligent/alisar/src/components/overview.js",[],"/Users/test/Desktop/sarya/aligent/alisar/src/components/reviews.js",["47"],"import React, { Component } from 'react'; \n\nclass Reviews extends Component  {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded : false,\t\n      reviews: null,\n      error: null\n    }\n  }\n  \n  getReviews() {\n    const apiUrl = `https://developers.zomato.com/api/v2.1/reviews?res_id=${this.props.restObject.id}`;\n    const headers = { \n      'Content-Type': 'application/json',\n      'user-key': '228ac77f20d86fa18e10986505837b57'\n    } \n    fetch(apiUrl, {method:'GET',headers})\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            loaded: true,\n            reviews: result.user_reviews\n          })\n        },\n        (error) => {\n          this.setState({\n            loaded: true,\n            error: error\n          })\n        }\n      )\n  }\n\n  componentDidMount() {\n    this.getReviews();\n  }\n\n  render() {\n    const {error, loaded, reviews} = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!loaded) {\n      return <div className = 'spinner'>\n        <div className=\"spinner-grow text-primary\" role=\"status\">\n          <span className=\"sr-only\" >Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-secondary\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-success\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-danger\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-warning\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-info\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-light\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n        <div className=\"spinner-grow text-dark\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>;\n    } else {\n      return (\n        <div>\n          {reviews.map(item => (<div key={item.review.id}>\n            <div className=\"reviews-members pt-4 pb-4\">\n              <div className=\"media\">\n                <img alt=\"Generic placeholder image\" src={item.review.user.profile_image} className=\"mr-3 rounded-pill\" />\n                <div className=\"media-body\">\n                  <div className=\"rating float-right ml-2\">\n                    <h4><span className=\"badge badge-info\" >{item.review.rating}</span></h4>\n                  </div>\n                  <h6 className=\"mb-1 text-info\">{item.review.user.name}</h6>\n                  <p className=\"text-secondary\">{item.review.review_time_friendly}</p>\n                  <span className=\"text-danger\">{item.review.rating_text}</span>\n                  <div>\n                    <p>{item.review.review_text}</p>\n                  </div>             \n                </div>\n              </div>\n            </div>\n            <hr/>\n          </div>\n          ) \n          )}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Reviews;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":40,"column":20,"nodeType":"54","messageId":"55","endLine":40,"endColumn":22},{"ruleId":"56","severity":1,"message":"57","line":57,"column":7,"nodeType":"58","endLine":57,"endColumn":17},{"ruleId":"56","severity":1,"message":"57","line":65,"column":7,"nodeType":"58","endLine":65,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":18,"column":48,"nodeType":"61","endLine":18,"endColumn":112},{"ruleId":"59","severity":1,"message":"60","line":19,"column":13,"nodeType":"61","endLine":19,"endColumn":50},{"ruleId":"62","severity":1,"message":"63","line":79,"column":17,"nodeType":"61","endLine":79,"endColumn":123},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]